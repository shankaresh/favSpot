{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["Button","props","href","React","createElement","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","inputHandler","setFormData","title","description","process","place","fetchPlace","LoadingSpinner","JSON","stringify","Authorization","token","userId"],"mappings":"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","file":"static/js/5.56615716.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_BASE_URL}/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_BASE_URL}/api/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}