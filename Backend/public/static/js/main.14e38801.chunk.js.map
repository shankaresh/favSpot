{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","React","createElement","className","concat","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","Link","logoutTimer","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.14e38801.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n// import firebase from './firebase';\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense \n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}